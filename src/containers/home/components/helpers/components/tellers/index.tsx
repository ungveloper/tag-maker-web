import { useTranslation } from "next-i18next";
import { memo, useEffect, useState } from "react";
import isEqual from "react-fast-compare";
import { useRecoilValue } from "recoil";
import { tagsAtom } from "../../../tags/stats";
import { FlexBox, InitOptionButton } from "@/containers/home/styles";

function Tellers(): JSX.Element {
  const { t } = useTranslation(["contents"]);
  const text = useRecoilValue(tagsAtom);
  const [textLength, setTextLength] = useState<number>(0);
  const [rowLength, setRowLength] = useState<number>(0);

  useEffect(() => {
    setTextLength(text?.length);
    if (!text) {
      setRowLength(0);
      return;
    }
    setRowLength(text?.split("\n").length);
  }, [text]);

  return (
    <FlexBox>
      <InitOptionButton disabled>
        <svg viewBox="0 0 36 36">
          <path d="M5.5998 12.3998C6.87006 12.3998 7.89981 11.3701 7.89981 10.0998C7.89981 8.82955 6.87006 7.7998 5.5998 7.7998C4.32955 7.7998 3.2998 8.82955 3.2998 10.0998C3.2998 11.3701 4.32955 12.3998 5.5998 12.3998Z" />
          <path d="M5.5998 20.2997C6.87006 20.2997 7.89981 19.27 7.89981 17.9997C7.89981 16.7295 6.87006 15.6997 5.5998 15.6997C4.32955 15.6997 3.2998 16.7295 3.2998 17.9997C3.2998 19.27 4.32955 20.2997 5.5998 20.2997Z" />
          <path d="M5.5998 28.1996C6.87006 28.1996 7.89981 27.1699 7.89981 25.8996C7.89981 24.6294 6.87006 23.5996 5.5998 23.5996C4.32955 23.5996 3.2998 24.6294 3.2998 25.8996C3.2998 27.1699 4.32955 28.1996 5.5998 28.1996Z" />
          <path d="M31.5002 9H11.3002C10.7002 9 10.2002 9.5 10.2002 10.1C10.2002 10.7 10.7002 11.2 11.3002 11.2H31.5002C32.1002 11.2 32.6002 10.7 32.6002 10.1C32.6002 9.5 32.1002 9 31.5002 9Z" />
          <path d="M31.4996 16.8999H11.1996C10.5996 16.8999 10.0996 17.3999 10.0996 17.9999C10.0996 18.5999 10.5996 19.0999 11.1996 19.0999H31.3996C31.9996 19.0999 32.4996 18.5999 32.4996 17.9999C32.5996 17.3999 32.0996 16.8999 31.4996 16.8999Z" />
          <path d="M31.4996 24.7998H11.1996C10.5996 24.7998 10.0996 25.2998 10.0996 25.8998C10.0996 26.4998 10.5996 26.9998 11.1996 26.9998H31.3996C31.9996 26.9998 32.4996 26.4998 32.4996 25.8998C32.5996 25.2998 32.0996 24.7998 31.4996 24.7998Z" />
        </svg>
        <span>
          {rowLength} {t("tellerLinesTitle")}
        </span>
      </InitOptionButton>
      <InitOptionButton disabled>
        <svg viewBox="0 0 36 36">
          <path d="M32.9004 14.2003C31.7004 13.0003 30.0004 12.3003 28.1004 12.3003C25.4004 12.3003 22.9004 13.9003 21.9004 16.4003C21.7004 17.0003 21.9004 17.6003 22.5004 17.9003C23.1004 18.1003 23.7004 17.9003 24.0004 17.3003C24.7004 15.7003 26.3004 14.6003 28.2004 14.6003C30.9004 14.6003 32.7004 16.4003 32.7004 19.1003V19.7003C31.1004 19.7003 29.0004 19.8003 27.2004 20.0003C26.1004 20.1003 24.6004 20.5003 23.4004 21.3003C22.1004 22.2003 21.4004 23.6003 21.4004 25.2003C21.4004 28.2003 23.6004 30.4003 26.7004 30.4003C29.0004 30.4003 31.0004 29.7003 32.4004 28.5003C32.5004 28.4003 32.5004 28.4003 32.6004 28.3003V29.2003C32.6004 29.8003 33.1004 30.3003 33.7004 30.3003C34.3004 30.3003 34.8004 29.8003 34.8004 29.2003V21.8003V20.7003V19.0003C34.9004 17.2003 34.2004 15.4003 32.9004 14.2003ZM26.7004 28.2003C25.2004 28.2003 23.6004 27.3003 23.6004 25.2003C23.6004 23.1003 25.7004 22.4003 27.4004 22.2003C29.1004 22.0003 31.1004 21.9003 32.6004 21.9003C32.6004 26.1003 30.6004 28.2003 26.7004 28.2003Z" />
          <path d="M17.2 21.0001C17.2 21.0001 17.2 20.9001 17.2 21.0001L11.7 6.3001C11.5 5.9001 11.1 5.6001 10.6 5.6001C10.1 5.6001 9.79999 5.9001 9.59999 6.3001L4.19999 20.9001L1.29999 28.8001C1.09999 29.4001 1.39999 30.0001 1.99999 30.2001C2.59999 30.4001 3.19999 30.1001 3.39999 29.5001L5.99999 22.5001H15.4L18.1 29.6001C18.3 30.1001 18.7 30.3001 19.2 30.3001C19.3 30.3001 19.5 30.3001 19.6 30.2001C20.2 30.0001 20.5 29.3001 20.3 28.8001L17.2 21.0001ZM6.79999 20.2001L10.7 9.9001L14.6 20.2001H6.79999Z" />
        </svg>
        <span>
          {textLength} {t("tellerCharactersTitle")}
        </span>
      </InitOptionButton>
    </FlexBox>
  );
}

export default memo(Tellers, isEqual);
